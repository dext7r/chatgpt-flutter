name: Build and Release Flutter App

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-release-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Update API_KEY
        run: echo API_KEY=${{ secrets.API_KEY }} > .env

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      - name: Build iOS App
        run: flutter build ios --no-codesign
        env:
          APP_PATH: build/ios/iphoneos/Runner.app

      - name: Set APP_PATH
        run: echo "APP_PATH=app.zip" >> $GITHUB_ENV

      - name: Upload App
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: ./build/ios/iphoneos/Runner.app

  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Update API_KEY
        run: echo API_KEY=${{ secrets.API_KEY }} > .env

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      - name: Build Windows App
        run: flutter build windows
        env:
          APP_PATH: build/windows/runner/Release/runner.exe
      - name: Set APP_PATH
        run: echo "APP_PATH=build/windows/runner/Release/runner.exe" >> $GITHUB_ENV

      - name: Build APK
        run: flutter build apk --release --no-sound-null-safety
        env:
          APK_PATH: build/app/outputs/flutter-apk/app-release.apk

      - name: Set APK_PATH
        run: echo "APK_PATH=build/app/outputs/flutter-apk/app-release.apk"` >> $GITHUB_ENV

      - name: Build DMG
        run: flutter build macos --release --no-codesign
        env:
          DMG_PATH: build/macos/Build/Products/Release/Runner.dmg

      - name: Set DMG_PATH
        run: echo "DMG_PATH=build/macos/Build/Products/Release/Runner.dmg" >> $GITHUB_ENV

      - name: Build PKG
        run: |
          flutter build macos --release --no-codesign --build-number=$GITHUB_RUN_NUMBER
          flutter build macos --release --no-codesign --build-number=$GITHUB_RUN_NUMBER --create-app-bundle
        env:
          PKG_PATH: build/macos/Build/Products/Release/bundle/Runner-$GITHUB_RUN_NUMBER.pkg

      - name: Set PKG_PATH
        run: echo "PKG_PATH=build/macos/Build/Products/Release/bundle/Runner-$GITHUB_RUN_NUMBER.pkg" >> $GITHUB_ENV

      - name: Upload App
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: ./build/windows/runner/Release/runner.exe

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: android-app
          path: ${{ env.APK_PATH }}

      - name: Upload DMG
        uses: actions/upload-artifact@v2
        with:
          name: macos-app
          path: ${{ env.DMG_PATH }}

      - name: Upload PKG
        uses: actions/upload-artifact@v2
        with:
          name: macos-app
          path: ${{ env.PKG_PATH }}

  build-and-release-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Update API_KEY
        run: echo API_KEY=${{ secrets.API_KEY }} > .env

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      - name: Build Web App
        run: flutter build web --release --web-renderer=html --no-sound-null-safety
        env:
          WEB_PATH: build/web/

      - name: Set WEB_PATH
        run: echo "WEB_PATH=build/web/" >> $GITHUB_ENV

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@master
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.PERSONAL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./${{ env.WEB_PATH }}

      - name: Upload Web Files
        uses: actions/upload-artifact@v3
        with:
          name: web-app
          path: ${{ env.WEB_PATH }}
